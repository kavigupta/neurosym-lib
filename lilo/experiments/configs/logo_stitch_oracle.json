{
    "metadata": {
        "experiment_id": "logo_stitch_oracle",
        "human_readable": "Candidate library generator. Checkpoints out the original ground truth DSL frontiers only.",
        "export_directory": "experiments/outputs/compositional_graphics",
        "log_directory": "experiments/logs/compositional_graphics",
        "tasks_loader": "compositional_graphics_200",
        "task_language_loader": "compositional_graphics_200_synthetic",
        "export_with_timestamp": false,
        "resume_checkpoint_directory": null,
        "init_frontiers_from_checkpoint": false,
        "ocaml_special_handler": "LOGO",
        "random_seed": 0
    },
    "model_initializers": [
        {
            "model_type": "grammar",
            "model_loader": "LOGO",
            "model_initializer_fn": "load_model",
            "params": {}
        },
        {
            "model_type": "library_learner",
            "model_loader": "stitch_proposer",
            "model_initializer_fn": "load_model",
            "params": {}
        },
        {
            "model_type": "program_rewriter",
            "model_loader": "stitch_rewriter",
            "model_initializer_fn": "load_model",
            "params": {}
        }
    ],
    "experiment_iterator": {
        "max_iterations": 1,
        "task_batcher": {
            "model_type": "ground_truth_ordered_task_batcher",
            "params": {
                "global_batch_size": "all",
                "verbose": true
            }
        },
        "loop_blocks": [
            {
                "experiment_block_type": "state_fn",
                "state_fn": "log_metadata",
                "params": {
                    "verbosity": 3
                }
            },
            {
                "experiment_block_type": "state_fn",
                "state_fn": "initialize_ground_truth_task_frontiers",
                "params": {
                    "task_split": "test"
                }
            },
            {
                "experiment_block_type": "model_fn",
                "model_type": "library_learner",
                "model_fn": "get_compressed_grammar_mdl_prior_rank",
                "task_splits": [
                    "test"
                ],
                "task_batch_sizes": [
                    "all"
                ],
                "params": {
                    "max_arity": 2,
                    "iterations": 10,
                    "candidates_per_iteration": 1,
                    "include_samples": false,
                    "update_grammar": true
                }
            },
            {
                "experiment_block_type": "model_fn",
                "model_type": "program_rewriter",
                "model_fn": "get_rewritten_frontiers_for_grammar",
                "task_splits": [
                    "test"
                ],
                "task_batch_sizes": [
                    "all"
                ],
                "params": {
                    "load_inventions_from_split": "test",
                    "include_samples": false
                }
            },
            {
                "experiment_block_type": "model_fn",
                "model_type": "grammar",
                "model_fn": "evaluate_frontiers",
                "task_splits": [
                    "test"
                ],
                "task_batch_sizes": [
                    "all"
                ],
                "params": {
                    "compute_likelihoods": true,
                    "compute_description_lengths": true,
                    "save_filename": "test_likelihoods.json"
                }
            }
        ]
    }
}